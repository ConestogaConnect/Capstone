@model ConestogaConnect.Models.Accomodation

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm(new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Accomodation</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Number_of_Rooms, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Number_of_Rooms, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Number_of_Rooms, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rent, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Rent, new SelectList(
                        new List<Object>{
                            new { value = true , text = "Yes"  },
                            new { value = false , text = "No" },

                        },
                        "value",
                        "text",
                        1), new { @class = "form-control" }
                )

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Facilities, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Facilities, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Facilities, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PetFriendly, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.PetFriendly, new SelectList(
                        new List<Object>{
                            new { value = true , text = "Yes"  },
                            new { value = false , text = "No" },

                        },
                        "value",
                        "text",
                        1), new { @class = "form-control" }
                )

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Floor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Floor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Floor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Furnished, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Furnished, new SelectList(
                        new List<Object>{
                            new { value = true , text = "Yes"  },
                            new { value = false , text = "No" },

                        },
                        "value",
                        "text",
                        1), new { @class = "form-control" }
                )

        </div>
    </div>


    <div>
        <div>Upload new image: <input type="file" name="Image" /></div>

    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
